{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1d54fe2e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"containr\"\n};\nconst _hoisted_2 = {\n  class: \"search-results\"\n};\nconst _hoisted_3 = {\n  class: \"cards-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CharacterCard = _resolveComponent(\"CharacterCard\");\n  const _component_Modal = _resolveComponent(\"Modal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, \"Search Results \" + _toDisplayString($options.filteredCharacters.length), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.displayedCharacters, character => {\n    return _openBlock(), _createBlock(_component_CharacterCard, {\n      key: character.id,\n      character: character,\n      onShowModal: $options.showModal\n    }, null, 8 /* PROPS */, [\"character\", \"onShowModal\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.modalVisible ? (_openBlock(), _createBlock(_component_Modal, {\n    key: 0,\n    character: $data.selectedCharacter,\n    onCloseModal: $options.closeModal\n  }, null, 8 /* PROPS */, [\"character\", \"onCloseModal\"])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$options","filteredCharacters","length","_hoisted_3","_Fragment","_renderList","displayedCharacters","character","_createBlock","_component_CharacterCard","key","id","onShowModal","showModal","$data","modalVisible","_component_Modal","selectedCharacter","onCloseModal","closeModal"],"sources":["/Users/danielhorne/Desktop/Ditto/rickandmorty/src/components/SearchResults.vue"],"sourcesContent":["<template>\n    <div class=\"containr\">\n        <div class=\"search-results\">\n            <h2>Search Results \n                {{ filteredCharacters.length }}\n            </h2>\n\n            <div class=\"cards-container\">\n                <CharacterCard\n                    v-for=\"character in displayedCharacters\"\n                    :key=\"character.id\"\n                    :character=\"character\"\n                    @show-modal=\"showModal\"\n                />\n            </div>\n\n            <Modal \n                v-if=\"modalVisible\" \n                :character=\"selectedCharacter\" \n                @close-modal=\"closeModal\" \n            />\n        </div>\n\n    </div>\n</template>\n  \n<script>\nimport CharacterCard from './CharacterCard.vue';\nimport Modal from './Modal.vue';\n\nexport default {\n    props: ['characters', 'searchQuery'],\n    components: {\n        CharacterCard,\n        Modal\n    },\n    data() {\n        return {\n            page: 1,\n            pages: 1,\n            charactersPerPage: 4,\n            modalVisible: false,\n            selectedCharacter: {}\n        };\n    },\n    computed: {\n        filteredCharacters() {\n            if (this.searchQuery) {\n            return this.characters.filter(character =>\n                character.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n            );\n            } else {\n                return this.characters;\n            }\n        },\n        displayedCharacters() {\n            const startIndex = (this.page - 1) * this.charactersPerPage;\n            const endIndex = startIndex + this.charactersPerPage;\n            return this.filteredCharacters.slice(startIndex, endIndex);\n        },\n        changePage(page) {\n            this.page = page <= 0 || page > this.pages ? this.page : page;\n            this.fetch();\n        },\n    },\n    methods: {\n        changePage(page) {\n            this.page = page <= 0 || page > this.pages ? this.page : page;\n            this.fetch();\n        },\n        showModal(character) {\n            this.selectedCharacter = character;\n            this.modalVisible = true;\n        },\n        closeModal() {\n            this.modalVisible = false;\n            this.selectedCharacter = {};\n        }\n    }\n};\n</script>\n  \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n\nh2 {\n    margin-bottom: 1.5rem;\n}\n.search-results {\n    display: flex;\n    flex-direction: column;\n    height: 50vh;\n    gap: 1rem;\n    overflow: hidden;\n    padding: 2rem;\n    width: 70vw;\n\n    .cards-container {\n        display: flex;\n        flex-direction: row;\n        gap: 0.5rem;\n        width: 100%;\n    }\n}\n</style>\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAU;;EACZA,KAAK,EAAC;AAAgB;;EAKlBA,KAAK,EAAC;AAAiB;;;;uBANpCC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBFC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBFD,mBAAA,CAEK,YAFD,iBACA,GAAAE,gBAAA,CAAGC,QAAA,CAAAC,kBAAkB,CAACC,MAAM,kBAGhCL,mBAAA,CAOM,OAPNM,UAOM,I,kBANFR,mBAAA,CAKES,SAAA,QAAAC,WAAA,CAJsBL,QAAA,CAAAM,mBAAmB,EAAhCC,SAAS;yBADpBC,YAAA,CAKEC,wBAAA;MAHGC,GAAG,EAAEH,SAAS,CAACI,EAAE;MACjBJ,SAAS,EAAEA,SAAS;MACpBK,WAAU,EAAEZ,QAAA,CAAAa;;oCAKXC,KAAA,CAAAC,YAAY,I,cADtBP,YAAA,CAIEQ,gBAAA;;IAFGT,SAAS,EAAEO,KAAA,CAAAG,iBAAiB;IAC5BC,YAAW,EAAElB,QAAA,CAAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}