{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Search = _resolveComponent(\"Search\");\n  const _component_SearchResults = _resolveComponent(\"SearchResults\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Search, {\n    onSearch: $options.searchData\n  }, null, 8 /* PROPS */, [\"onSearch\"]), _createVNode(_component_SearchResults, {\n    characters: _ctx.characters,\n    searchQuery: _ctx.search\n  }, null, 8 /* PROPS */, [\"characters\", \"searchQuery\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Search","onSearch","$options","searchData","_component_SearchResults","characters","_ctx","searchQuery","search"],"sources":["/Users/danielhorne/Desktop/Ditto/rickandmorty/src/App.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <Search @search=\"searchData\" />\n      <SearchResults\n        :characters=\"characters\"\n        :searchQuery=\"search\"\n      />\n    </div>\n</template>\n  \n<script>\n  import axios from \"axios\";\n  import Search from './components/Search.vue';\n  import SearchResults from './components/SearchResults.vue';\n  import CharacterCard from './components/CharacterCard.vue';\n  \n  export default {\n    name: 'App',\n    components: {\n      Search,\n      SearchResults,\n      CharacterCard\n    },\n    data: function() {\n      return {\n        characters: [],\n        page: 1,\n        pages: 1,\n        search: \"\",\n        modal: false,\n        currentCharacter: {}\n      };\n    },\n    created() {\n      this.fetch();\n    },\n    methods: {\n      fetch() {\n        const params = {\n          page: this.page,\n          name: this.search\n        };\n  \n        let url = \"https://rickandmortyapi.com/api/character\";\n        let result = axios\n            .get(url, { params })\n            .then(res => {\n              this.characters = res.data.results;\n              this.pages = res.data.info.pages;\n            })\n            .catch(console.log);\n      },\n      changePage(page) {\n        this.page = page <= 0 || page > this.pages ? this.page : page;\n        this.fetch();\n      },\n      searchData(query) {\n        this.search = query;\n        this.page = 1; // Reset page to 1 when performing a new search\n        this.fetch();\n      },\n      showModal(id) {\n        this.fetchOne(id);\n      },\n      async fetchOne(id) {\n        let result = await axios.get(\n            `https://rickandmortyapi.com/api/character/${id}/`\n        );\n        this.currentCharacter = result.data;\n        this.modal = true;\n      }\n    }\n  };\n</script>\n  \n\n<style lang=\"scss\">\n\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    scroll-behavior: smooth;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\np {\n    margin: 0;\n}\n\nul[role='list'],\nol[role='list'] {\n    list-style: none;\n}\n\nbody {\n    background: #3a4767;\n    color: #ebebee;\n    width: 100%;\n}\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;;;uBAAtBC,mBAAA,CAMM,OANNC,UAMM,GALJC,YAAA,CAA+BC,iBAAA;IAAtBC,QAAM,EAAEC,QAAA,CAAAC;EAAU,uCAC3BJ,YAAA,CAGEK,wBAAA;IAFCC,UAAU,EAAEC,IAAA,CAAAD,UAAU;IACtBE,WAAW,EAAED,IAAA,CAAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}