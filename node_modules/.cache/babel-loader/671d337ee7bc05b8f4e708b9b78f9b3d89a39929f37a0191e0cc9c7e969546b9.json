{"ast":null,"code":"import axios from \"axios\";\nimport Search from './components/Search.vue';\nimport SearchResults from './components/SearchResults.vue';\nexport default {\n  name: 'App',\n  components: {\n    Search,\n    SearchResults\n  },\n  data: function () {\n    return {\n      characters: [],\n      page: 1,\n      pages: 1,\n      search: \"\",\n      currentCharacter: {}\n    };\n  },\n  created() {\n    this.fetch();\n  },\n  methods: {\n    fetch() {\n      const params = {\n        page: this.page,\n        name: this.search\n      };\n      let url = \"https://rickandmortyapi.com/api/character\";\n      let result = axios.get(url, {\n        params\n      }).then(res => {\n        this.characters = res.data.results;\n        this.pages = res.data.info.pages;\n        console.log(this.characters);\n      }).catch(console.log);\n    },\n    changePage(page) {\n      this.page = page <= 0 || page > this.pages ? this.page : page;\n      this.fetch();\n    },\n    searchData(query) {\n      this.search = query;\n      this.page = 1; // Reset page to 1 when performing a new search\n      this.fetch();\n    },\n    async fetchOne(id) {\n      let result = await axios.get(`https://rickandmortyapi.com/api/character/${id}/`);\n      this.currentCharacter = result.data;\n      this.modal = true;\n    }\n  }\n};","map":{"version":3,"names":["axios","Search","SearchResults","name","components","data","characters","page","pages","search","currentCharacter","created","fetch","methods","params","url","result","get","then","res","results","info","console","log","catch","changePage","searchData","query","fetchOne","id","modal"],"sources":["/Users/danielhorne/Desktop/Ditto/rickandmorty/src/App.vue"],"sourcesContent":["<template>\n    <div class=\"main-container\">\n        <Search @search=\"searchData\" />\n        <SearchResults\n            :characters=\"characters\"\n            :searchQuery=\"search\"\n        />\n\n        <Modal \n            v-if=\"modalVisible\" \n            :character=\"selectedCharacter\" \n            @close-modal=\"closeModal\" \n        />\n\n        <div class=\"pagination\">\n            <button @click=\"changePage(page - 1)\" :disabled=\"page === 1\">Previous</button>\n                <span>{{ page }} / {{ pages }}</span>\n            <button @click=\"changePage(page + 1)\" :disabled=\"page === pages\">Next</button>\n        </div>\n    </div>\n</template>\n  \n<script>\n    import axios from \"axios\";\n    import Search from './components/Search.vue';\n    import SearchResults from './components/SearchResults.vue';\n  \n  export default {\n    name: 'App',\n    components: {\n      Search,\n      SearchResults,\n    },\n    data: function() {\n      return {\n        characters: [],\n        page: 1,\n        pages: 1,\n        search: \"\",\n        currentCharacter: {}\n      };\n    },\n    created() {\n      this.fetch();\n    },\n    methods: {\n      fetch() {\n        const params = {\n          page: this.page,\n          name: this.search\n        };\n  \n        let url = \"https://rickandmortyapi.com/api/character\";\n        let result = axios\n            .get(url, { params })\n            .then(res => {\n              this.characters = res.data.results;\n              this.pages = res.data.info.pages;\n              console.log(this.characters);\n            })\n            .catch(console.log);\n      },\n      changePage(page) {\n        this.page = page <= 0 || page > this.pages ? this.page : page;\n        this.fetch();\n      },\n      searchData(query) {\n        this.search = query;\n        this.page = 1; // Reset page to 1 when performing a new search\n        this.fetch();\n      },\n      async fetchOne(id) {\n        let result = await axios.get(\n            `https://rickandmortyapi.com/api/character/${id}/`\n        );\n        this.currentCharacter = result.data;\n        this.modal = true;\n      }\n    }\n  };\n</script>\n  \n\n<style lang=\"scss\">\n\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    scroll-behavior: smooth;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\np {\n    margin: 0;\n}\n\nul[role='list'],\nol[role='list'] {\n    list-style: none;\n}\n\nbody {\n    background: #ebebee;\n    color: #3a4767;\n    width: 100%;\n}\n\n.main-container {\n    background-image: url('@/assets/rick-bg.png');\n    border-radius: 0.5rem;\n    box-shadow: 0 0 8px 1px #262d3b;\n    height: calc(100vh - 2rem);\n    margin: auto;\n    outline: 1px solid #ebebee;\n    text-align: center;\n    width: calc(100vw - 2rem);\n\n    .pagination {\n        height: 10vh;\n        width: 70vw;\n    }\n}\n</style>\n"],"mappings":"AAuBI,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,aAAY,MAAO,gCAAgC;AAE5D,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVH,MAAM;IACNC;EACF,CAAC;EACDG,IAAI,EAAE,SAAAA,CAAA,EAAW;IACf,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,EAAE;MACVC,gBAAgB,EAAE,CAAC;IACrB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,KAAK,CAAC,CAAC;EACd,CAAC;EACDC,OAAO,EAAE;IACPD,KAAKA,CAAA,EAAG;MACN,MAAME,MAAK,GAAI;QACbP,IAAI,EAAE,IAAI,CAACA,IAAI;QACfJ,IAAI,EAAE,IAAI,CAACM;MACb,CAAC;MAED,IAAIM,GAAE,GAAI,2CAA2C;MACrD,IAAIC,MAAK,GAAIhB,KAAI,CACZiB,GAAG,CAACF,GAAG,EAAE;QAAED;MAAO,CAAC,EACnBI,IAAI,CAACC,GAAE,IAAK;QACX,IAAI,CAACb,UAAS,GAAIa,GAAG,CAACd,IAAI,CAACe,OAAO;QAClC,IAAI,CAACZ,KAAI,GAAIW,GAAG,CAACd,IAAI,CAACgB,IAAI,CAACb,KAAK;QAChCc,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,UAAU,CAAC;MAC9B,CAAC,EACAkB,KAAK,CAACF,OAAO,CAACC,GAAG,CAAC;IACzB,CAAC;IACDE,UAAUA,CAAClB,IAAI,EAAE;MACf,IAAI,CAACA,IAAG,GAAIA,IAAG,IAAK,KAAKA,IAAG,GAAI,IAAI,CAACC,KAAI,GAAI,IAAI,CAACD,IAAG,GAAIA,IAAI;MAC7D,IAAI,CAACK,KAAK,CAAC,CAAC;IACd,CAAC;IACDc,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAAClB,MAAK,GAAIkB,KAAK;MACnB,IAAI,CAACpB,IAAG,GAAI,CAAC,EAAE;MACf,IAAI,CAACK,KAAK,CAAC,CAAC;IACd,CAAC;IACD,MAAMgB,QAAQA,CAACC,EAAE,EAAE;MACjB,IAAIb,MAAK,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CACvB,6CAA4CY,EAAG,GACpD,CAAC;MACD,IAAI,CAACnB,gBAAe,GAAIM,MAAM,CAACX,IAAI;MACnC,IAAI,CAACyB,KAAI,GAAI,IAAI;IACnB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}