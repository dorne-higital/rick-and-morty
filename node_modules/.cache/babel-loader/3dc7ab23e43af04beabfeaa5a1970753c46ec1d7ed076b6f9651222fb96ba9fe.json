{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1d54fe2e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"containr\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Search Results\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredCharacters, character => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: character.id\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(character.name), 1 /* TEXT */), _createElementVNode(\"img\", {\n      src: character.image,\n      alt: character.name\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"p\", null, \"Status: \" + _toDisplayString(character.status), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Species: \" + _toDisplayString(character.species), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$options","filteredCharacters","character","key","id","_toDisplayString","name","src","image","alt","status","species"],"sources":["/Users/danielhorne/Desktop/Ditto/rickandmorty/src/components/SearchResults.vue"],"sourcesContent":["<template>\n    <div class=\"containr\">\n        <h2>Search Results</h2>\n\n        <li \n            v-for=\"character in filteredCharacters\" \n            :key=\"character.id\"\n        >\n            <h2>{{ character.name }}</h2>\n            <img :src=\"character.image\" :alt=\"character.name\" />\n            <p>Status: {{ character.status }}</p>\n            <p>Species: {{ character.species }}</p>\n        </li>\n    </div>\n</template>\n  \n<script>\nexport default {\n    props: ['characters', 'searchQuery'],\n    computed: {\n        filteredCharacters() {\n            if (this.searchQuery) {\n            return this.characters.filter(character =>\n                character.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n            );\n            } else {\n            return this.characters;\n            }\n        }\n    }\n};\n</script>\n  \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style scoped lang=\"scss\">\n  h3 {\n    margin: 40px 0 0;\n  }\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    display: inline-block;\n    margin: 0 10px;\n  }\n  a {\n    color: #42b983;\n  }\n  </style>\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAU;gEACjBC,mBAAA,CAAuB,YAAnB,gBAAc;;;uBADtBC,mBAAA,CAYM,OAZNC,UAYM,GAXFC,UAAuB,G,kBAEvBF,mBAAA,CAQKG,SAAA,QAAAC,WAAA,CAPmBC,QAAA,CAAAC,kBAAkB,EAA/BC,SAAS;yBADpBP,mBAAA,CAQK;MANAQ,GAAG,EAAED,SAAS,CAACE;QAEhBV,mBAAA,CAA6B,YAAAW,gBAAA,CAAtBH,SAAS,CAACI,IAAI,kBACrBZ,mBAAA,CAAoD;MAA9Ca,GAAG,EAAEL,SAAS,CAACM,KAAK;MAAGC,GAAG,EAAEP,SAAS,CAACI;yCAC5CZ,mBAAA,CAAqC,WAAlC,UAAQ,GAAAW,gBAAA,CAAGH,SAAS,CAACQ,MAAM,kBAC9BhB,mBAAA,CAAuC,WAApC,WAAS,GAAAW,gBAAA,CAAGH,SAAS,CAACS,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}