{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Search = _resolveComponent(\"Search\");\n  const _component_SearchResults = _resolveComponent(\"SearchResults\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Search), _createVNode(_component_SearchResults), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.characters, character => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: character.id\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(character.name), 1 /* TEXT */), _createElementVNode(\"img\", {\n      src: character.image,\n      alt: character.name\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"p\", null, \"Status: \" + _toDisplayString(character.status), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Species: \" + _toDisplayString(character.species), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Search","_component_SearchResults","_Fragment","_renderList","_ctx","characters","character","key","id","_createElementVNode","_toDisplayString","name","src","image","alt","status","species"],"sources":["/Users/danielhorne/Desktop/Ditto/rickandmorty/src/App.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <Search />\n        <SearchResults />\n\n        <li \n            v-for=\"character in characters\" \n            :key=\"character.id\"\n        >\n            <h2>{{ character.name }}</h2>\n            <img :src=\"character.image\" :alt=\"character.name\" />\n            <p>Status: {{ character.status }}</p>\n            <p>Species: {{ character.species }}</p>\n        </li>\n\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nimport Search from './components/Search.vue';\nimport SearchResults from './components/SearchResults.vue';\nimport CharacterCard from './components/CharacterCard.vue';\n\nexport default {\n    name: 'App',\n    components: {\n        Search,\n        SearchResults,\n        CharacterCard\n    },\n    data: function() {\n        return {\n            characters: [],\n            page: 1,\n            pages: 1,\n            search: \"\",\n            modal: false,\n            currentCharacter: {}\n        };\n    },\n    created() {\n        this.fetch();\n    },\n    methods: {\n        fetch() {\n        const params = {\n            page: this.page,\n            name: this.search\n        };\n\n        let url = \"https://rickandmortyapi.com/api/character\";\n        let result = axios\n            .get(url, { params })\n            .then(res => {\n            this.characters = res.data.results;\n\n            this.pages = res.data.info.pages;\n\n            console.log(res.data);\n            })\n            .catch(console.log);\n        },\n        changePage(page) {\n            this.page = page <= 0 || page > this.pages ? this.page : page;\n            this.fetch();\n        },\n        searchData() {\n            this.page = 1;\n            this.fetch();\n        },\n        showModal(id) {\n            this.fetchOne(id);\n        },\n        async fetchOne(id) {\n            let result = await axios.get(\n                `https://rickandmortyapi.com/api/character/${id}/`\n            );\n            this.currentCharacter = result.data;\n            console.log(this.currentCharacter);\n            this.modal = true;\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;;;;uBAAtBC,mBAAA,CAcM,OAdNC,UAcM,GAbFC,YAAA,CAAUC,iBAAA,GACVD,YAAA,CAAiBE,wBAAA,I,kBAEjBJ,mBAAA,CAQKK,SAAA,QAAAC,WAAA,CAPmBC,IAAA,CAAAC,UAAU,EAAvBC,SAAS;yBADpBT,mBAAA,CAQK;MANAU,GAAG,EAAED,SAAS,CAACE;QAEhBC,mBAAA,CAA6B,YAAAC,gBAAA,CAAtBJ,SAAS,CAACK,IAAI,kBACrBF,mBAAA,CAAoD;MAA9CG,GAAG,EAAEN,SAAS,CAACO,KAAK;MAAGC,GAAG,EAAER,SAAS,CAACK;yCAC5CF,mBAAA,CAAqC,WAAlC,UAAQ,GAAAC,gBAAA,CAAGJ,SAAS,CAACS,MAAM,kBAC9BN,mBAAA,CAAuC,WAApC,WAAS,GAAAC,gBAAA,CAAGJ,SAAS,CAACU,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}