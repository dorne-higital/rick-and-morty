{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1d54fe2e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"containr\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, [/*#__PURE__*/_createTextVNode(\"Search Results \"), /*#__PURE__*/_createCommentVNode(\" {{ filteredCharacters.length }} out of {{ characters.length }} \")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CharacterCard = _resolveComponent(\"CharacterCard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" <li \\n            v-for=\\\"character in filteredCharacters\\\" \\n            :key=\\\"character.id\\\"\\n        >\\n            <h2>{{ character.name }}</h2>\\n            <img :src=\\\"character.image\\\" :alt=\\\"character.name\\\" />\\n            <p>Status: {{ character.status }}</p>\\n            <p>Species: {{ character.species }}</p>\\n        </li> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredcharacters, character => {\n    return _openBlock(), _createElementBlock(\"section\", {\n      key: character.id\n    }, [_createVNode(_component_CharacterCard)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","_ctx","filteredcharacters","character","key","id","_createVNode","_component_CharacterCard"],"sources":["/Users/danielhorne/Desktop/Ditto/rickandmorty/src/components/SearchResults.vue"],"sourcesContent":["<template>\n    <div class=\"containr\">\n        <h2>Search Results \n            <!-- {{ filteredCharacters.length }} out of {{ characters.length }} -->\n        </h2>\n        <!-- <li \n            v-for=\"character in filteredCharacters\" \n            :key=\"character.id\"\n        >\n            <h2>{{ character.name }}</h2>\n            <img :src=\"character.image\" :alt=\"character.name\" />\n            <p>Status: {{ character.status }}</p>\n            <p>Species: {{ character.species }}</p>\n        </li> -->\n\n        <section\n            v-for=\"character in filteredcharacters\"\n            :key=\"character.id\"\n        >\n            <CharacterCard />\n        </section>\n    </div>\n</template>\n  \n<script>\nexport default {\n    props: ['characters', 'searchQuery'],\n    computed: {\n        filteredCharacters() {\n            if (this.searchQuery) {\n            return this.characters.filter(character =>\n                character.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n            );\n            } else {\n            return this.characters;\n            }\n        }\n    }\n};\n</script>\n  \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style scoped lang=\"scss\">\n  h3 {\n    margin: 40px 0 0;\n  }\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    display: inline-block;\n    margin: 0 10px;\n  }\n  a {\n    color: #42b983;\n  }\n  </style>\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAU;gEACjBC,mBAAA,CAEK,a,8BAFD,iBACA,G,aAAAC,mBAAA,oEAAuE,C;;;;uBAF/EC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBFC,UAEK,EACLH,mBAAA,wVAQS,G,kBAETC,mBAAA,CAKUG,SAAA,QAAAC,WAAA,CAJcC,IAAA,CAAAC,kBAAkB,EAA/BC,SAAS;yBADpBP,mBAAA,CAKU;MAHLQ,GAAG,EAAED,SAAS,CAACE;QAEhBC,YAAA,CAAiBC,wBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}