{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1d54fe2e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"containr\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, [/*#__PURE__*/_createTextVNode(\"Search Results \"), /*#__PURE__*/_createCommentVNode(\" {{ filteredCharacters.length }} out of {{ characters.length }} \")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"search-results\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CharacterCard = _resolveComponent(\"CharacterCard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" <li \\n            v-for=\\\"character in filteredCharacters\\\" \\n            :key=\\\"character.id\\\"\\n        >\\n            <h2>{{ character.name }}</h2>\\n            <img :src=\\\"character.image\\\" :alt=\\\"character.name\\\" />\\n            <p>Status: {{ character.status }}</p>\\n            <p>Species: {{ character.species }}</p>\\n        </li> \"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredCharacters, character => {\n    return _openBlock(), _createBlock(_component_CharacterCard, {\n      key: character.id,\n      character: character\n    }, null, 8 /* PROPS */, [\"character\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","filteredCharacters","character","_createBlock","_component_CharacterCard","key","id"],"sources":["/Users/danielhorne/Desktop/Ditto/rickandmorty/src/components/SearchResults.vue"],"sourcesContent":["<template>\n    <div class=\"containr\">\n        <h2>Search Results \n            <!-- {{ filteredCharacters.length }} out of {{ characters.length }} -->\n        </h2>\n        <!-- <li \n            v-for=\"character in filteredCharacters\" \n            :key=\"character.id\"\n        >\n            <h2>{{ character.name }}</h2>\n            <img :src=\"character.image\" :alt=\"character.name\" />\n            <p>Status: {{ character.status }}</p>\n            <p>Species: {{ character.species }}</p>\n        </li> -->\n\n        <div class=\"search-results\">\n            <CharacterCard\n                v-for=\"character in filteredCharacters\"\n                :key=\"character.id\"\n                :character=\"character\"\n            />\n        </div>\n\n    </div>\n</template>\n  \n<script>\nimport CharacterCard from './CharacterCard.vue';\n\nexport default {\n    props: ['characters', 'searchQuery'],\n    components: {\n        CharacterCard\n    },\n    computed: {\n        filteredCharacters() {\n            if (this.searchQuery) {\n            return this.characters.filter(character =>\n                character.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n            );\n            } else {\n                return this.characters;\n            }\n        }\n    }\n};\n</script>\n  \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.search-results {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 0.5rem;\n}\n</style>\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAU;gEACjBC,mBAAA,CAEK,a,8BAFD,iBACA,G,aAAAC,mBAAA,oEAAuE,C;;EAYtEF,KAAK,EAAC;AAAgB;;;uBAd/BG,mBAAA,CAsBM,OAtBNC,UAsBM,GArBFC,UAEK,EACLH,mBAAA,wVAQS,EAETD,mBAAA,CAMM,OANNK,UAMM,I,kBALFH,mBAAA,CAIEI,SAAA,QAAAC,WAAA,CAHsBC,QAAA,CAAAC,kBAAkB,EAA/BC,SAAS;yBADpBC,YAAA,CAIEC,wBAAA;MAFGC,GAAG,EAAEH,SAAS,CAACI,EAAE;MACjBJ,SAAS,EAAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}